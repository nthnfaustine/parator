{"version":3,"sources":["components/Navigation/Navigation.jsx","components/InputForm/InputForm.jsx","components/Rank/Rank.jsx","components/Result/Result.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navigation","style","display","justifyContent","className","InputForm","onInputChange","onButtonSubmit","onInputChange2","onChange","onClick","Rank","Result","sampiran1","sampiran2","output1","output2","App","event","masuk","target","value","masukk","split","setState","input1","length","input2","i","theString1","state","theString2","lastWord1","toLowerCase","lastWord2","result1","result2","resultt1","resultt2","push","wordDic","unshift","converted1","tf","expandDims","converted2","_","a","predictAkhiran","predictAkhiranOther","Promise","r","setTimeout","akhiran","kamos","kata","new_akhiran","swap","number1","akhiran1","number2","akhiran2","kata1","kata2","reverseOutput1","reverseOutput2","generatePantun","generatePantunOther","predicting","wordDicLabel","pantunDic","fetch","headers","then","response","json","users","message","console","log","model","this","preprocessPantunInput","pantunInput","predict","data","number","Math","max","apply","index","indexOf","new_json","newString","reversedNewString","theString","sequence","tokenizedMes","ret","key","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07fe8154.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n            <p className='f3 link dim black underline pa3 pointer white'></p>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './InputForm.css';\r\n\r\nconst InputForm = ({ onInputChange, onButtonSubmit, onInputChange2 }) => {\r\n    return (\r\n        <div className='ma4 mt0'>\r\n            <p className='f3 white'>\r\n                {'Masukan sampiran pantun dan tekan Generate untuk membuat pantun'}\r\n            </p>\r\n            <div className='center'>\r\n                <div className='form center pa4 br3 shadow-5'>\r\n                    <input className='f4 pa2 w-70 center' onChange={onInputChange} />\r\n                    <input className='f4 pa2 w-70 center' onChange={onInputChange2} />\r\n                    <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={onButtonSubmit} >Generate</button>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputForm;","import React from 'react';\r\n\r\nconst Rank = () => {\r\n    return (\r\n        <div className='ma4 mt0'>\r\n            <div className='white f3'>\r\n                {'Pantun Generator'}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\n// import './InputForm.css'\r\n\r\nconst Result = ({ sampiran1, sampiran2, output1, output2 }) => {\r\n    return (\r\n        <div className='ma4 mt0 shadow-5 pa4 br3'>\r\n            <p className='white'>{ sampiran1 }</p>\r\n            <p className='white'>{ sampiran2 }</p>\r\n            <p className='white'>{ output1 }</p>\r\n            <p className='white'>{ output2 }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result;","import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport InputForm from './components/InputForm/InputForm';\nimport Rank from './components/Rank/Rank';\nimport Result from './components/Result/Result';\nimport * as tf from '@tensorflow/tfjs';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input1: '',\n      input2: '',\n      wordDic: [],\n      wordDicLabel: [],\n      pantunDic: [],\n      akhiran1: '',\n      output1: '',\n      reverseOutput1: '',\n      akhiran2: '',\n      output2: '',\n      reverseOutput2: '',\n      kamos: {}\n    }\n  }\n\n  componentDidMount(){\n    fetch('./word_dict.json',{\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n        }\n    }\n    )\n    .then(response => response.json())\n    .then(users => this.setState({wordDic: users}))\n\n    fetch('./word_dict_label.json',{\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n        }\n    }\n    )\n    .then(response => response.json())\n    .then(users => this.setState({wordDicLabel: users}))\n\n    fetch('./generator_dict.json',{\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n        }\n    }\n    )\n    .then(response => response.json())\n    .then(users => this.setState({pantunDic: users}))\n\n    fetch('./test.json',{\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n        }\n    }\n    )\n    .then(response => response.json())\n    .then(users => this.setState({kamos: users}))\n  }\n\n  onInputChange = (event) => {\n    const masuk = event.target.value\n    const masukk = masuk.split(' ')\n    this.setState({ input1: masuk })\n    this.setState({ output1: masukk[masukk.length - 1] })\n    // this.setState({ reverseOutput1: masukk[masukk.length - 1] })\n  }\n\n  onInputChange2 = (event) => {\n    const masuk = event.target.value\n    const masukk = masuk.split(' ')\n    this.setState({ input2: masuk })\n    this.setState({ output2: masukk[masukk.length - 1] })\n    // this.setState({ reverseOutput2: masukk[masukk.length - 1] })\n  }\n\n  onButtonSubmit = () => {\n    // GENERATE AKHIRAN WITH THIS\n    const theString1 = this.state.input1.split(\" \");\n    const theString2 = this.state.input2.split(\" \");\n    const lastWord1 = theString1[theString1.length - 1].toLowerCase();\n    const lastWord2 = theString2[theString2.length - 1].toLowerCase();\n    const result1 = lastWord1.split('')\n    const result2 = lastWord2.split('')\n\n    var i;\n    var resultt1 = []\n    var resultt2 = []\n    for (i = 0; i < result1.length; i++) {\n      resultt1.push(this.state.wordDic[result1[i]]);\n    }\n    for (i = 0; i < 120 - result1.length; i++){\n      resultt1.unshift(0)\n    }\n    for (i = 0; i < result2.length; i++) {\n      resultt2.push(this.state.wordDic[result2[i]]);\n    }\n    for (i = 0; i < 120 - result2.length; i++){\n      resultt2.unshift(0)\n    }\n\n    const converted1 = tf.tensor1d(resultt1).expandDims(0);\n    const converted2 = tf.tensor1d(resultt2).expandDims(0);\n    // console.log(\"ini :\" + converted2);\n\n    const predicting = async _ => {\n      await this.predictAkhiran(converted1);\n      await this.predictAkhiranOther(converted2);\n      await new Promise(r => setTimeout(r, 400));\n\n      const akhiran = this.state.kamos['akhiran']\n      const kata = this.state.kamos['kata']\n      const new_akhiran = this.swap(akhiran)\n      const number1 = new_akhiran[this.state.akhiran1];\n      const number2 = new_akhiran[this.state.akhiran2];\n      const kata1 = kata[number1];\n      const kata2 = kata[number2];\n      this.setState({ output1: kata1 });\n      this.setState({ reverseOutput1: kata1 });\n      this.setState({ output2: kata2 });\n      this.setState({ reverseOutput2: kata2 });\n      await new Promise(r => setTimeout(r, 400));\n      \n      // GENERATE PANTUN WITH THIS\n      for(i = 0; i < 3; i++){\n        await this.generatePantun(this.state.output1);\n        await this.generatePantunOther(this.state.output2)\n        await new Promise(r => setTimeout(r, 400));\n      }\n    }\n\n    predicting();\n  }\n\n  async generatePantun(message){\n    console.log(\"cooking pantun\");\n    const model = await tf.loadLayersModel('./pantunModel/model.json');\n    const pantunInput = await this.preprocessPantunInput(message);\n    const predicted = model.predict(pantunInput)\n    predicted.data().then(data => {\n      const number = Math.max.apply(Math, data);\n      const index = data.indexOf(number);\n      const new_json = this.swap(this.state.pantunDic);\n      const newString = this.state.output1 + \" \" + new_json[index];\n      const reversedNewString = new_json[index] + \" \" + this.state.reverseOutput1;\n      this.setState({output1: newString});\n      this.setState({reverseOutput1: reversedNewString});\n      console.log(newString);\n    })\n  }\n\n  async generatePantunOther(message){\n    console.log(\"cooking pantun\");\n    const model = await tf.loadLayersModel('./pantunModel/model.json');\n    const pantunInput = await this.preprocessPantunInput(message);\n    const predicted = model.predict(pantunInput)\n    predicted.data().then(data => {\n      const number = Math.max.apply(Math, data);\n      const index = data.indexOf(number);\n      const new_json = this.swap(this.state.pantunDic);\n      const newString = this.state.output2 + \" \" + new_json[index];\n      const reversedNewString = new_json[index] + \" \" + this.state.reverseOutput2;\n      this.setState({output2: newString});\n      this.setState({reverseOutput2: reversedNewString});\n      console.log(newString);\n    })\n  }\n\n  async predictAkhiran(message){\n    console.log(\"detecting akhiran...\");\n    const model = await tf.loadLayersModel('./rhymeModel/model.json');\n    const predicted = model.predict(message)\n    predicted.data().then(data => {\n      const number = Math.max.apply(Math, data);\n      const index = data.indexOf(number)\n      const new_json = this.swap(this.state.wordDicLabel)\n      this.setState({akhiran1: new_json[index]})\n    })\n  }\n\n  async predictAkhiranOther(message){\n    console.log(\"detecting akhiran...\");\n    const model = await tf.loadLayersModel('./rhymeModel/model.json');\n    const predicted = model.predict(message)\n    predicted.data().then(data => {\n      const number = Math.max.apply(Math, data);\n      const index = data.indexOf(number)\n      const new_json = this.swap(this.state.wordDicLabel)\n      this.setState({akhiran2: new_json[index]})\n    })\n  }\n\n  preprocessPantunInput(message){\n    const newMes = message.toLowerCase();\n    const theString = newMes.split(\" \");\n    var sequence = [];\n    var i;\n  \n    for (i = 0; i < theString.length; i++) {\n      var tokenizedMes = 0\n      if (theString[i] in this.state.pantunDic){\n        tokenizedMes = this.state.pantunDic[theString[i]]\n      }\n      sequence.push(tokenizedMes);\n    }\n    for (i = 0; i < 7 - theString.length; i++) {\n      sequence.unshift(0);\n    }\n    const seqConverted = tf.tensor1d(sequence).expandDims(0);\n\n    return seqConverted;\n  }\n\n  swap(json){\n    var ret = {};\n    for(var key in json){\n      ret[json[key]] = key;\n    }\n    return ret;\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Navigation />\n        <Rank />\n        <InputForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} onInputChange2={this.onInputChange2}/>\n        <Result sampiran1={this.state.input1} sampiran2={this.state.input2} output1={this.state.reverseOutput1} output2={this.state.reverseOutput2}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}