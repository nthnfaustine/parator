{"version":3,"sources":["components/Navigation/Navigation.jsx","components/InputForm/InputForm.jsx","components/Rank/Rank.jsx","components/Result/Result.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navigation","style","display","justifyContent","className","InputForm","onInputChange","onButtonSubmit","onInputChange2","onChange","onClick","Rank","Result","sampiran1","sampiran2","output1","output2","App","event","masuk","target","value","masukk","split","setState","input1","length","input2","i","theString1","state","theString2","lastWord1","toLowerCase","lastWord2","result1","result2","resultt1","resultt2","push","wordDic","unshift","converted1","tf","expandDims","converted2","_","a","predictAkhiran","predictAkhiranOther","Promise","r","setTimeout","property","akhiran","kamos","kata","dict1","dict2","akhiran1","akhiran2","number1","Math","floor","random","number2","kata1","kata2","reverseOutput1","reverseOutput2","generatePantun","generatePantunOther","predicting","wordDicLabel","pantunDic","fetch","headers","then","response","json","users","message","console","log","model","this","preprocessPantunInput","pantunInput","predict","data","number","max","apply","index","indexOf","new_json","swap","newString","reversedNewString","theString","sequence","tokenizedMes","ret","key","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6fbf72b0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n            <p className='f3 link dim black underline pa3 pointer white'></p>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './InputForm.css';\r\n\r\nconst InputForm = ({ onInputChange, onButtonSubmit, onInputChange2 }) => {\r\n    return (\r\n        <div className='ma4 mt0'>\r\n            <p className='f3 white'>\r\n                {'Masukan sampiran pantun dan tekan Generate untuk membuat pantun'}\r\n            </p>\r\n            <div className='center'>\r\n                <div className='form center pa4 br3 shadow-5'>\r\n                    <input className='f4 pa2 w-70 center' onChange={onInputChange} />\r\n                    <input className='f4 pa2 w-70 center' onChange={onInputChange2} />\r\n                    <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={onButtonSubmit} >Generate</button>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputForm;","import React from 'react';\r\n\r\nconst Rank = () => {\r\n    return (\r\n        <div className='ma4 mt0'>\r\n            <div className='white f3'>\r\n                {'Pantun Generator'}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\n// import './InputForm.css'\r\n\r\nconst Result = ({ sampiran1, sampiran2, output1, output2 }) => {\r\n    return (\r\n        <div className='ma4 mt0 shadow-5 pa4 br3'>\r\n            <p className='white'>{ sampiran1 }</p>\r\n            <p className='white'>{ sampiran2 }</p>\r\n            <p className='white'>{ output1 }</p>\r\n            <p className='white'>{ output2 }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport InputForm from './components/InputForm/InputForm';\r\nimport Rank from './components/Rank/Rank';\r\nimport Result from './components/Result/Result';\r\nimport * as tf from '@tensorflow/tfjs';\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      input1: '',\r\n      input2: '',\r\n      wordDic: [],\r\n      wordDicLabel: [],\r\n      pantunDic: [],\r\n      akhiran1: '',\r\n      output1: '',\r\n      reverseOutput1: '',\r\n      akhiran2: '',\r\n      output2: '',\r\n      reverseOutput2: '',\r\n      kamos: {}\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('http://localhost:3000/parator/word_dict.json',{\r\n      headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n        }\r\n    }\r\n    )\r\n    .then(response => response.json())\r\n    .then(users => this.setState({wordDic: users}))\r\n\r\n    fetch('http://localhost:3000/parator/word_dict_label.json',{\r\n      headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n        }\r\n    }\r\n    )\r\n    .then(response => response.json())\r\n    .then(users => this.setState({wordDicLabel: users}))\r\n\r\n    fetch('http://localhost:3000/parator/generator_dict.json',{\r\n      headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n        }\r\n    }\r\n    )\r\n    .then(response => response.json())\r\n    .then(users => this.setState({pantunDic: users}))\r\n\r\n    fetch('http://localhost:3000/parator/test.json',{\r\n      headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n        }\r\n    }\r\n    )\r\n    .then(response => response.json())\r\n    .then(users => this.setState({kamos: users}))\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    const masuk = event.target.value\r\n    const masukk = masuk.split(' ')\r\n    this.setState({ input1: masuk })\r\n    this.setState({ output1: masukk[masukk.length - 1] })\r\n    // this.setState({ reverseOutput1: masukk[masukk.length - 1] })\r\n  }\r\n\r\n  onInputChange2 = (event) => {\r\n    const masuk = event.target.value\r\n    const masukk = masuk.split(' ')\r\n    this.setState({ input2: masuk })\r\n    this.setState({ output2: masukk[masukk.length - 1] })\r\n    // this.setState({ reverseOutput2: masukk[masukk.length - 1] })\r\n  }\r\n\r\n  onButtonSubmit = () => {\r\n    // GENERATE AKHIRAN WITH THIS\r\n    const theString1 = this.state.input1.split(\" \");\r\n    const theString2 = this.state.input2.split(\" \");\r\n    const lastWord1 = theString1[theString1.length - 1].toLowerCase();\r\n    const lastWord2 = theString2[theString2.length - 1].toLowerCase();\r\n    const result1 = lastWord1.split('')\r\n    const result2 = lastWord2.split('')\r\n\r\n    var i;\r\n    var resultt1 = []\r\n    var resultt2 = []\r\n    for (i = 0; i < result1.length; i++) {\r\n      resultt1.push(this.state.wordDic[result1[i]]);\r\n    }\r\n    for (i = 0; i < 120 - result1.length; i++){\r\n      resultt1.unshift(0)\r\n    }\r\n    for (i = 0; i < result2.length; i++) {\r\n      resultt2.push(this.state.wordDic[result2[i]]);\r\n    }\r\n    for (i = 0; i < 120 - result2.length; i++){\r\n      resultt2.unshift(0)\r\n    }\r\n\r\n    const converted1 = tf.tensor1d(resultt1).expandDims(0);\r\n    const converted2 = tf.tensor1d(resultt2).expandDims(0);\r\n    // console.log(\"ini :\" + converted2);\r\n\r\n    const predicting = async _ => {\r\n      await this.predictAkhiran(converted1);\r\n      await this.predictAkhiranOther(converted2);\r\n      await new Promise(r => setTimeout(r, 400));\r\n\r\n      const akhiran = this.state.kamos['akhiran']\r\n      const kata = this.state.kamos['kata']\r\n      \r\n      // buat dictonary yang simpen angka apa aja yang pake akhiran itu\r\n      var dict1 = [];\r\n      var dict2 = [];\r\n      for (const property in akhiran) {\r\n        if(akhiran[property] == this.state.akhiran1){\r\n          dict1.push(property);\r\n        }\r\n        if(akhiran[property] == this.state.akhiran2){\r\n          dict2.push(property);\r\n        }\r\n      }\r\n\r\n      // ambil angka random dari dictionary nya\r\n      const number1 = dict1[Math.floor(Math.random() * dict1.length)];\r\n      const number2 = dict2[Math.floor(Math.random() * dict2.length)];\r\n\r\n      const kata1 = kata[number1];\r\n      const kata2 = kata[number2];\r\n      this.setState({ output1: kata1 });\r\n      this.setState({ reverseOutput1: kata1 });\r\n      this.setState({ output2: kata2 });\r\n      this.setState({ reverseOutput2: kata2 });\r\n      await new Promise(r => setTimeout(r, 400));\r\n      \r\n      // GENERATE PANTUN WITH THIS\r\n      for(i = 0; i < 3; i++){\r\n        await this.generatePantun(this.state.output1);\r\n        await this.generatePantunOther(this.state.output2)\r\n        await new Promise(r => setTimeout(r, 400));\r\n      }\r\n    }\r\n\r\n    predicting();\r\n  }\r\n\r\n  async generatePantun(message){\r\n    console.log(\"cooking pantun\");\r\n    const model = await tf.loadLayersModel('http://localhost:3000/parator/pantunModel/model.json');\r\n    const pantunInput = await this.preprocessPantunInput(message);\r\n    const predicted = model.predict(pantunInput)\r\n    predicted.data().then(data => {\r\n      const number = Math.max.apply(Math, data);\r\n      const index = data.indexOf(number);\r\n      const new_json = this.swap(this.state.pantunDic);\r\n      const newString = this.state.output1 + \" \" + new_json[index];\r\n      const reversedNewString = new_json[index] + \" \" + this.state.reverseOutput1;\r\n      this.setState({output1: newString});\r\n      this.setState({reverseOutput1: reversedNewString});\r\n      console.log(newString);\r\n    })\r\n  }\r\n\r\n  async generatePantunOther(message){\r\n    console.log(\"cooking pantun\");\r\n    const model = await tf.loadLayersModel('http://localhost:3000/parator/pantunModel/model.json');\r\n    const pantunInput = await this.preprocessPantunInput(message);\r\n    const predicted = model.predict(pantunInput)\r\n    predicted.data().then(data => {\r\n      const number = Math.max.apply(Math, data);\r\n      const index = data.indexOf(number);\r\n      const new_json = this.swap(this.state.pantunDic);\r\n      const newString = this.state.output2 + \" \" + new_json[index];\r\n      const reversedNewString = new_json[index] + \" \" + this.state.reverseOutput2;\r\n      this.setState({output2: newString});\r\n      this.setState({reverseOutput2: reversedNewString});\r\n      console.log(newString);\r\n    })\r\n  }\r\n\r\n  async predictAkhiran(message){\r\n    console.log(\"detecting akhiran...\");\r\n    const model = await tf.loadLayersModel('http://localhost:3000/parator/rhymeModel/model.json');\r\n    const predicted = model.predict(message)\r\n    predicted.data().then(data => {\r\n      const number = Math.max.apply(Math, data);\r\n      const index = data.indexOf(number)\r\n      const new_json = this.swap(this.state.wordDicLabel)\r\n      this.setState({akhiran1: new_json[index]})\r\n    })\r\n  }\r\n\r\n  async predictAkhiranOther(message){\r\n    console.log(\"detecting akhiran...\");\r\n    const model = await tf.loadLayersModel('http://localhost:3000/parator/rhymeModel/model.json');\r\n    const predicted = model.predict(message)\r\n    predicted.data().then(data => {\r\n      const number = Math.max.apply(Math, data);\r\n      const index = data.indexOf(number)\r\n      const new_json = this.swap(this.state.wordDicLabel)\r\n      this.setState({akhiran2: new_json[index]})\r\n    })\r\n  }\r\n\r\n  preprocessPantunInput(message){\r\n    const newMes = message.toLowerCase();\r\n    const theString = newMes.split(\" \");\r\n    var sequence = [];\r\n    var i;\r\n  \r\n    for (i = 0; i < theString.length; i++) {\r\n      var tokenizedMes = 0\r\n      if (theString[i] in this.state.pantunDic){\r\n        tokenizedMes = this.state.pantunDic[theString[i]]\r\n      }\r\n      sequence.push(tokenizedMes);\r\n    }\r\n    for (i = 0; i < 7 - theString.length; i++) {\r\n      sequence.unshift(0);\r\n    }\r\n    const seqConverted = tf.tensor1d(sequence).expandDims(0);\r\n\r\n    return seqConverted;\r\n  }\r\n\r\n  swap(json){\r\n    var ret = {};\r\n    for(var key in json){\r\n      ret[json[key]] = key;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <Navigation />\r\n        <Rank />\r\n        <InputForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} onInputChange2={this.onInputChange2}/>\r\n        <Result sampiran1={this.state.input1} sampiran2={this.state.input2} output1={this.state.reverseOutput1} output2={this.state.reverseOutput2}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}